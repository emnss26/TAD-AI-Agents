{"prompt":"Coloca pilares \u0027MLO-UC305x305x97\u0027 en cada intersección de la retícula de ejes en el \u0027Nivel 1\u0027.","completion":"FamilySymbol columnType = new FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsElementType().Cast\u003cFamilySymbol\u003e().FirstOrDefault(s =\u003e s.Name == \"MLO-UC305x305x97\");\nLevel level = new FilteredElementCollector(doc).OfClass(typeof(Level)).FirstOrDefault(l =\u003e l.Name == \"Nivel 1\") as Level;\n\nFilteredElementCollector gridCollector = new FilteredElementCollector(doc).OfClass(typeof(Grid));\nIList\u003cGrid\u003e grids = gridCollector.Cast\u003cGrid\u003e().ToList();\n\nif (columnType != null \u0026\u0026 level != null \u0026\u0026 grids.Count \u003e 1)\n{\n    if (!columnType.IsActive) columnType.Activate();\n\n    for (int i = 0; i \u003c grids.Count; i++)\n    {\n        for (int j = i + 1; j \u003c grids.Count; j++)\n        {\n            SetComparisonResult result = grids[i].Curve.Intersect(grids[j].Curve, out IntersectionResultArray results);\n            if (result == SetComparisonResult.Overlap \u0026\u0026 results != null \u0026\u0026 !results.IsEmpty)\n            {\n                XYZ intersectionPoint = results.get_Item(0).XYZPoint;\n                doc.Create.NewFamilyInstance(intersectionPoint, columnType, level, StructuralType.Column);\n            }\n        }\n    }\n}","errors":["34:CS1026 ) expected","34:CS1002 ; expected","34:CS1525 Invalid expression term \u0027)\u0027"]}
{"prompt":"Place \u0027W12x26\u0027 columns at all grid intersections on \u0027Level 1\u0027.","completion":"FamilySymbol columnType = new FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsElementType().Cast\u003cFamilySymbol\u003e().FirstOrDefault(s =\u003e s.Name == \"W12x26\");\nLevel level = new FilteredElementCollector(doc).OfClass(typeof(Level)).FirstOrDefault(l =\u003e l.Name == \"Level 1\") as Level;\n\nFilteredElementCollector gridCollector = new FilteredElementCollector(doc).OfClass(typeof(Grid));\nIList\u003cGrid\u003e grids = gridCollector.Cast\u003cGrid\u003e().ToList();\n\nif (columnType != null \u0026\u0026 level != null \u0026\u0026 grids.Count \u003e 1)\n{\n    if (!columnType.IsActive) columnType.Activate();\n\n    for (int i = 0; i \u003c grids.Count; i++)\n    {\n        for (int j = i + 1; j \u003c grids.Count; j++)\n        {\n            SetComparisonResult result = grids[i].Curve.Intersect(grids[j].Curve, out IntersectionResultArray results);\n            if (result == SetComparisonResult.Overlap \u0026\u0026 results != null \u0026\u0026 !results.IsEmpty)\n            {\n                XYZ intersectionPoint = results.get_Item(0).XYZPoint;\n                doc.Create.NewFamilyInstance(intersectionPoint, columnType, level, StructuralType.Column);\n            }\n        }\n    }\n}","errors":["34:CS1026 ) expected","34:CS1002 ; expected","34:CS1525 Invalid expression term \u0027)\u0027"]}
{"prompt":"Add \u0027Bearing Footing - 36 x 12\u0027 foundations to all walls on Level 1.","completion":"WallFoundationType foundationType = new FilteredElementCollector(doc).OfClass(typeof(WallFoundationType)).FirstOrDefault(f =\u003e f.Name == \"Bearing Footing - 36 x 12\") as WallFoundationType;\nLevel level = new FilteredElementCollector(doc).OfClass(typeof(Level)).FirstOrDefault(l =\u003e l.Name == \"Level 1\") as Level;\n\nif (foundationType != null \u0026\u0026 level != null)\n{\n    FilteredElementCollector wallCollector = new FilteredElementCollector(doc).OfClass(typeof(Wall)).Where(w =\u003e w.LevelId == level.Id);\n    IList\u003cWall\u003e wallsOnLevel = wallCollector.Cast\u003cWall\u003e().ToList();\n\n    if (wallsOnLevel.Any())\n    {\n        foreach (Wall wall in wallsOnLevel)\n        {\n            WallFoundation.Create(doc, foundationType.Id, wall.Id);\n        }\n    }\n}","errors":["25:CS0266 Cannot implicitly convert type \u0027System.Collections.Generic.IEnumerable\u003cAutodesk.Revit.DB.Element\u003e\u0027 to \u0027Autodesk.Revit.DB.FilteredElementCollector\u0027. An explicit conversion exists (are you missing a cast?)"]}
{"prompt":"Place the \u0027Level 1\u0027 floor plan view on the active sheet.","completion":"View viewToPlace = new FilteredElementCollector(doc).OfClass(typeof(ViewPlan)).FirstOrDefault(v =\u003e v.Name == \"Level 1\" \u0026\u0026 !v.IsTemplate) as View;\nViewSheet sheet = doc.ActiveView as ViewSheet;\n\nif (viewToPlace != null \u0026\u0026 sheet != null \u0026\u0026 Viewport.CanAddViewToSheet(doc, sheet.Id, viewToPlace.Id))\n{\n    BoundingBoxUV sheetBox = sheet.Outline;\n    XYZ centerPoint = new XYZ((sheetBox.U.Min + sheetBox.U.Max) / 2, (sheetBox.V.Min + sheetBox.V.Max) / 2, 0);\n    Viewport.Create(doc, sheet.Id, viewToPlace.Id, centerPoint);\n}","errors":["20:CS1061 \u0027Autodesk.Revit.DB.Element\u0027 does not contain a definition for \u0027IsTemplate\u0027 and no extension method \u0027IsTemplate\u0027 accepting a first argument of type \u0027Autodesk.Revit.DB.Element\u0027 could be found (are you missing a using directive or an assembly reference?)","26:CS1061 \u0027Autodesk.Revit.DB.BoundingBoxUV\u0027 does not contain a definition for \u0027U\u0027 and no extension method \u0027U\u0027 accepting a first argument of type \u0027Autodesk.Revit.DB.BoundingBoxUV\u0027 could be found (are you missing a using directive or an assembly reference?)","26:CS1061 \u0027Autodesk.Revit.DB.BoundingBoxUV\u0027 does not contain a definition for \u0027U\u0027 and no extension method \u0027U\u0027 accepting a first argument of type \u0027Autodesk.Revit.DB.BoundingBoxUV\u0027 could be found (are you missing a using directive or an assembly reference?)","26:CS1061 \u0027Autodesk.Revit.DB.BoundingBoxUV\u0027 does not contain a definition for \u0027V\u0027 and no extension method \u0027V\u0027 accepting a first argument of type \u0027Autodesk.Revit.DB.BoundingBoxUV\u0027 could be found (are you missing a using directive or an assembly reference?)","26:CS1061 \u0027Autodesk.Revit.DB.BoundingBoxUV\u0027 does not contain a definition for \u0027V\u0027 and no extension method \u0027V\u0027 accepting a first argument of type \u0027Autodesk.Revit.DB.BoundingBoxUV\u0027 could be found (are you missing a using directive or an assembly reference?)"]}
